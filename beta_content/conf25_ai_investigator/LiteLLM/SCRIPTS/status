#!/bin/bash

# LiteLLM Status Script
# Shows detailed service status and health information
clear
set -e

# Get the directory where this script is located
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
PARENT_DIR="$(dirname "$SCRIPT_DIR")"

# Load environment variables from .env file
if [ -f "${PARENT_DIR}/.env" ]; then
    set -a
    source "${PARENT_DIR}/.env"
    set +a
fi

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
WHITE='\033[0;37m'
NC='\033[0m' # No Color

# Configuration
LOG_LINES=100
ERROR_PATTERNS="ERROR|FATAL|CRITICAL|Failed|failed|Exception|exception|panic|PANIC"
WARNING_PATTERNS="WARN|WARNING|warn|warning"
LOG_FILE="litellm_status-check.logs"

# Initialize log file
echo "=== Status Check Log ===" > $LOG_FILE
echo "Timestamp: $(date)" >> $LOG_FILE
echo "" >> $LOG_FILE

echo -e "${WHITE}=== LiteLLM Service Status Check ===${NC}"
echo "Analyzing container health status..."
echo "(Detailed logs will be saved to: $LOG_FILE)"
echo "Timestamp: $(date)"
echo ""

# Function to check container status
check_container_status() {
    local container=$1
    local status=$(sudo docker inspect -f '{{.State.Status}}' $container 2>/dev/null || echo "not found")
    local health=$(sudo docker inspect -f '{{.State.Health.Status}}' $container 2>/dev/null || echo "no healthcheck")
    
    if [ "$status" = "running" ]; then
        if [ "$health" = "healthy" ] || [ "$health" = "no healthcheck" ]; then
            echo -e "${GREEN}✓${NC} $container: Running"
        else
            echo -e "${YELLOW}⚠${NC} $container: Running (health: $health)"
        fi
    elif [ "$status" = "not found" ]; then
        echo -e "${RED}✗${NC} $container: Container not found"
    else
        echo -e "${RED}✗${NC} $container: $status"
    fi
}

# Function to analyze logs
analyze_logs() {
    local container=$1
    local logs=$(sudo docker logs --tail $LOG_LINES $container 2>&1 || echo "")
    
    # Write full logs to file
    echo "=== $container LOGS ===" >> $LOG_FILE
    echo "$logs" >> $LOG_FILE
    echo "" >> $LOG_FILE
    
    local error_count=$(echo "$logs" | grep -E "$ERROR_PATTERNS" | wc -l)
    local warning_count=$(echo "$logs" | grep -E "$WARNING_PATTERNS" | wc -l)
    
    # Write analysis to file
    echo "=== $container ANALYSIS ===" >> $LOG_FILE
    echo "Error count: $error_count" >> $LOG_FILE
    echo "Warning count: $warning_count" >> $LOG_FILE
    if [ $error_count -gt 0 ]; then
        echo "Recent errors:" >> $LOG_FILE
        echo "$logs" | grep -E "$ERROR_PATTERNS" | tail -5 >> $LOG_FILE
    fi
    if [ $warning_count -gt 0 ]; then
        echo "Recent warnings:" >> $LOG_FILE
        echo "$logs" | grep -E "$WARNING_PATTERNS" | tail -5 >> $LOG_FILE
    fi
    echo "" >> $LOG_FILE
    
    # Display summary to screen
    if [ $error_count -gt 0 ]; then
        echo -e "  ${RED}Errors: $error_count found${NC}"
        echo "$logs" | grep -E "$ERROR_PATTERNS" | tail -3 | sed 's/^/    /'
    fi
    
    if [ $warning_count -gt 0 ]; then
        echo -e "  ${YELLOW}Warnings: $warning_count found${NC}"
    fi
    
    if [ $error_count -eq 0 ] && [ $warning_count -eq 0 ]; then
        echo -e "  ${GREEN}Logs: Clean${NC}"
    fi
}

# Function to check port accessibility
check_port() {
    local port=$1
    local service=$2
    
    if nc -z localhost $port 2>/dev/null; then
        echo -e "${GREEN}✓${NC} Port $port ($service): Open"
    else
        echo -e "${RED}✗${NC} Port $port ($service): Not accessible"
    fi
}

# Container status
echo -e "${WHITE}Container Status:${NC}"
litellm_containers=(
    "${LITELLM_CONTAINER:-ainv__litellm-main}"
    "${LITELLM_DB_CONTAINER:-ainv__litellm-postgres}"
    "${RAW_LOGGING_CONTAINER:-ainv__raw_logger}"
)

echo -e "\n${WHITE}LiteLLM Containers:${NC}"
for container in "${litellm_containers[@]}"; do
    check_container_status $container
done

echo ""
echo -e "${WHITE}Log Analysis (last $LOG_LINES lines):${NC}"
for container in "${litellm_containers[@]}"; do
    if sudo docker ps | grep -q "$container"; then
        echo -e "\n${WHITE}$container:${NC}"
        analyze_logs $container
    fi
done

# Service connectivity
echo ""
echo -e "${WHITE}Service Connectivity:${NC}"

# Check ports using environment variables
check_port ${LITELLM_PORT:-7010} "LiteLLM Proxy"
check_port ${RAW_LOGGING_PORT:-7011} "Raw Logger Proxy"
check_port ${LITELLM_DB_PORT:-5435} "PostgreSQL (LiteLLM)"
    
# API health check
echo ""
echo -e "${WHITE}API Health Check:${NC}"
LITELLM_URL="http://localhost:${LITELLM_PORT:-7010}/health"
RAW_LOGGER_URL="http://localhost:${RAW_LOGGING_PORT:-7011}/about"
    
    if curl -s -f "${LITELLM_URL}/liveliness" > /dev/null 2>&1; then
        echo -e "${GREEN}✓${NC} LiteLLM API: Healthy"
    else
        echo -e "${RED}✗${NC} LiteLLM API: Not responding"
    fi
    
    if curl -s -f $RAW_LOGGER_URL > /dev/null 2>&1; then
        echo -e "${GREEN}✓${NC} Raw Logger API: Healthy"
    else
        echo -e "${RED}✗${NC} Raw Logger API: Not responding"
    fi
    
    # Service endpoints
    echo ""
    echo -e "${WHITE}Service Endpoints:${NC}"
    echo -e "${YELLOW}• LiteLLM Proxy: http://localhost:${LITELLM_PORT:-4000}${NC} (direct, no logging)"
    echo -e "${YELLOW}• Raw Logger Proxy: http://localhost:${RAW_LOGGING_PORT:-4001}${NC} (with raw logging)"
    echo "• PostgreSQL (LiteLLM): localhost:${LITELLM_DB_PORT:-5434}"

# Summary
echo ""
echo -e "${WHITE}=== Summary ===${NC}"
litellm_running=$(sudo docker ps --filter "name=${PROJECT_PREFIX}__litellm\|ai_proxy_mon_raw_logger" --filter "status=running" | wc -l | xargs -I {} expr {} - 1)
litellm_expected=3

echo -e "LiteLLM: $litellm_running/$litellm_expected services running"

if [ $litellm_running -eq $litellm_expected ]; then
    echo -e "${GREEN}✓ All services are running ($litellm_running/$litellm_expected)${NC}"
else
    echo -e "${RED}✗ Some services are not running ($litellm_running/$litellm_expected)${NC}"
fi

echo ""
echo "For detailed logs, use:"
echo "• LiteLLM: sudo docker compose -f docker-compose-litellm.yml logs -f [container_name]"
echo "Full detailed logs saved to: $LOG_FILE"

echo ""
echo -e "${WHITE}Quick Actions:${NC}"
echo "• View LiteLLM logs: sudo docker compose -f docker-compose-litellm.yml logs -f"
echo "• Restart services: ./restart"
echo "• Reload config: ./reload"
echo "• Stop services: ./stop"

# Write final summary to log file
echo "=== STATUS CHECK SUMMARY ===" >> $LOG_FILE
echo "LiteLLM running: $litellm_running/$litellm_expected" >> $LOG_FILE
echo "Timestamp completed: $(date)" >> $LOG_FILE